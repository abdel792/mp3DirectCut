name: Manual release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Add-on version, if not defined, will be set to today's date in the format recommended by nvaccess/addonStore"
        required: false
        default: ''
      prerelease:
        description: 'True if this is a prerelease'
        type: boolean
        required: false
        default: false

jobs:
  buildAndUpload:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:

    - name: Date formatting
      uses: ajilraju/actions-date@master #release v0.1
      with:
        args: date +%F

    - name: Environment variable for current date
      run: echo "CUR_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: Environment variable for tag_name
      run: echo "TAG_NAME="v"$(echo ${{ env.CUR_DATE }} | cut -c 3-4)"."$(echo ${{ env.CUR_DATE }} | cut -c 5-6)" >> $GITHUB_ENV

    - name: Environment variable for dev
      if: ${{ inputs.prerelease == true }}
      run: |
        echo 'MINOR_PATCH=1.0' >> $GITHUB_ENV
        echo 'TAG_NAME=${{ env.TAG_NAME }}-dev' >> $GITHUB_ENV

    - name: Environment variable for stable
      if: ${{ inputs.prerelease == false }}
      run: echo 'MINOR_PATCH=0.0' >> $GITHUB_ENV

    - name: Set build version when version is empty
      if: ${{ inputs.version == '' }}
      run: echo 'BUILD_VERSION=${{ env.CUR_DATE }}.${{ env.MINOR_PATCH }}' >> $GITHUB_ENV

    - name: Set build version when version is not empty
      if: ${{ inputs.version != '' }}
      run: echo 'BUILD_VERSION=${{ github.event.inputs.version }}' >> $GITHUB_ENV

    - name: Check BUILD_VERSION environment variable
      run: echo '${{ env.BUILD_VERSION }}'

    - name: Check TAG_NAME environment variable
      run: echo '${{ env.TAG_NAME }}'

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        pip install scons markdown
        sudo apt update
        sudo apt install gettext

    - name: Add add-on version
      run: |
        import re
        with open("buildVars.py", 'r+', encoding='utf-8') as f:
          text=f.read()
          version='${{ env.BUILD_VERSION }}'
          text=re.sub(r"\"addon_version\": .*?,", f"\"addon_version\": \"{version}\",", text)
          f.seek(0)
          f.write(text)
          f.truncate()
      shell: python 

    - name: Push changes
      run: |
        git config --local user.name 'github-actions'
        git config --local user.email 'github-actions@github.com'
        git commit -a -m "Update buildVars"
        git tag ${{ env.TAG_NAME }}
        git push origin HEAD:main
        git push origin ${{ env.TAG_NAME }}:refs/tags/${{ env.TAG_NAME }}

    - name: Build add-on
      run: scons version=${{ env.BUILD_VERSION }}

    - name: Calculate sha256
      run: sha256sum *.nvda-addon >> sha256.txt

    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          *.nvda-addon
          sha256.txt
        generate_release_notes: true
        prerelease: ${{ github.event.inputs.prerelease }}
        tag_name: ${{ env.TAG_NAME }}
        body_path: 'changelog.md'
